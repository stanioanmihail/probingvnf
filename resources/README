#------------------------------------------
# SessionAggregator and DataBaseConnector
# -----------------------------------------

The model used for retrieving data is a session.
A session is represented by:

IP src | IP dst | Port src | Port Dst | Transport Protocol |Type of Service | 
Packets | Bytes | Start Timestamp |  End Timestamp 


* Type of service - classified corresponding to well-known ports: HTTP/torrents/ default/video
* For HTTP check hostname field from packets (not yet implemented)
* Timestamp - local time of first packet with SYN
    - for TCP a session starts from SYN + no ACK, ends with FIN
    - for UDP - check upper protocol, e.g. for FTP check Transfer Complete
* Discard irrelevant traffic : ARP, DHCP, protocols in known multicast groups


DataBaseConnector should be started on a different thread and spill data to sqlite3 
when a timer is elapsed (in seconds) or when a number of intercepted bytes is reached.

# Compile pcap program
make

#------------------------------------------
# Local Test Files Information
# -----------------------------------------

gcc pcap_test.c -lpcap -o pcaptest

# tested on eth0
sudo ./pcaptest 100

# If your version of pcap is not compatible,
# generate a symbolic link to the requested version


# Insert into database test
gcc test_db.c -l sqlite3 -o sql

#---------------------------------------
# TODO
# -------------------------------------

1. Don't add multicast packets to SessionAggregator
2. Check if callback is called multiple times simmultanously and sync
3. Check video traffic, find a way to recognize it
4. Add timestamp + duration to Session!

